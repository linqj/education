<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinayouthedu.zqzc.mapper.paike.CoursePlanMapper">
  <resultMap id="BaseResultMap" type="com.chinayouthedu.zqzc.entity.paike.CoursePlan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="school_year_id" jdbcType="BIGINT" property="schoolYearId" />
    <result column="school_year_name" jdbcType="VARCHAR" property="schoolYearName" />
    <result column="semester_id" jdbcType="BIGINT" property="semesterId" />
    <result column="semester_name" jdbcType="VARCHAR" property="semesterName" />
    <result column="grade_id" jdbcType="BIGINT" property="gradeId" />
    <result column="grade_name" jdbcType="VARCHAR" property="gradeName" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_discipline" jdbcType="VARCHAR" property="courseDiscipline" />
    <result column="discipline_name" jdbcType="VARCHAR" property="disciplineName" />
    <result column="semester_learn_time" jdbcType="INTEGER" property="semesterLearnTime" />
    <result column="week_learn_time" jdbcType="INTEGER" property="weekLearnTime" />
    <result column="course_teacher" jdbcType="VARCHAR" property="courseTeacher" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="system_status" jdbcType="VARCHAR" property="systemStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school_year_id, school_year_name, semester_id, semester_name, grade_id, grade_name,
    course_id, course_name, course_discipline, discipline_name, semester_learn_time, 
    week_learn_time, course_teacher, create_time, update_time, system_status
  </sql>
  <select id="selectByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_plan
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course_plan
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlanExample">
    delete from course_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlan">
    insert into course_plan (id, school_year_id, school_year_name, 
      semester_id, semester_name, grade_id, 
      grade_name, course_id, course_name, 
      course_discipline, discipline_name, semester_learn_time, 
      week_learn_time, course_teacher, create_time, 
      update_time, system_status)
    values (#{id,jdbcType=BIGINT}, #{schoolYearId,jdbcType=BIGINT}, #{schoolYearName,jdbcType=VARCHAR}, 
      #{semesterId,jdbcType=BIGINT}, #{semesterName,jdbcType=VARCHAR}, #{gradeId,jdbcType=BIGINT}, 
      #{gradeName,jdbcType=VARCHAR}, #{courseId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR}, 
      #{courseDiscipline,jdbcType=VARCHAR}, #{disciplineName,jdbcType=VARCHAR}, #{semesterLearnTime,jdbcType=INTEGER}, 
      #{weekLearnTime,jdbcType=INTEGER}, #{courseTeacher,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{systemStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlan">
    insert into course_plan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="schoolYearId != null">
        school_year_id,
      </if>
      <if test="schoolYearName != null">
        school_year_name,
      </if>
      <if test="semesterId != null">
        semester_id,
      </if>
      <if test="semesterName != null">
        semester_name,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="gradeName != null">
        grade_name,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseDiscipline != null">
        course_discipline,
      </if>
      <if test="disciplineName != null">
        discipline_name,
      </if>
      <if test="semesterLearnTime != null">
        semester_learn_time,
      </if>
      <if test="weekLearnTime != null">
        week_learn_time,
      </if>
      <if test="courseTeacher != null">
        course_teacher,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="systemStatus != null">
        system_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="schoolYearId != null">
        #{schoolYearId,jdbcType=BIGINT},
      </if>
      <if test="schoolYearName != null">
        #{schoolYearName,jdbcType=VARCHAR},
      </if>
      <if test="semesterId != null">
        #{semesterId,jdbcType=BIGINT},
      </if>
      <if test="semesterName != null">
        #{semesterName,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeName != null">
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseDiscipline != null">
        #{courseDiscipline,jdbcType=VARCHAR},
      </if>
      <if test="disciplineName != null">
        #{disciplineName,jdbcType=VARCHAR},
      </if>
      <if test="semesterLearnTime != null">
        #{semesterLearnTime,jdbcType=INTEGER},
      </if>
      <if test="weekLearnTime != null">
        #{weekLearnTime,jdbcType=INTEGER},
      </if>
      <if test="courseTeacher != null">
        #{courseTeacher,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemStatus != null">
        #{systemStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlanExample" resultType="java.lang.Long">
    select count(*) from course_plan
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course_plan
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.schoolYearId != null">
        school_year_id = #{record.schoolYearId,jdbcType=BIGINT},
      </if>
      <if test="record.schoolYearName != null">
        school_year_name = #{record.schoolYearName,jdbcType=VARCHAR},
      </if>
      <if test="record.semesterId != null">
        semester_id = #{record.semesterId,jdbcType=BIGINT},
      </if>
      <if test="record.semesterName != null">
        semester_name = #{record.semesterName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=BIGINT},
      </if>
      <if test="record.gradeName != null">
        grade_name = #{record.gradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseDiscipline != null">
        course_discipline = #{record.courseDiscipline,jdbcType=VARCHAR},
      </if>
      <if test="record.disciplineName != null">
        discipline_name = #{record.disciplineName,jdbcType=VARCHAR},
      </if>
      <if test="record.semesterLearnTime != null">
        semester_learn_time = #{record.semesterLearnTime,jdbcType=INTEGER},
      </if>
      <if test="record.weekLearnTime != null">
        week_learn_time = #{record.weekLearnTime,jdbcType=INTEGER},
      </if>
      <if test="record.courseTeacher != null">
        course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.systemStatus != null">
        system_status = #{record.systemStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course_plan
    set id = #{record.id,jdbcType=BIGINT},
      school_year_id = #{record.schoolYearId,jdbcType=BIGINT},
      school_year_name = #{record.schoolYearName,jdbcType=VARCHAR},
      semester_id = #{record.semesterId,jdbcType=BIGINT},
      semester_name = #{record.semesterName,jdbcType=VARCHAR},
      grade_id = #{record.gradeId,jdbcType=BIGINT},
      grade_name = #{record.gradeName,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=BIGINT},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_discipline = #{record.courseDiscipline,jdbcType=VARCHAR},
      discipline_name = #{record.disciplineName,jdbcType=VARCHAR},
      semester_learn_time = #{record.semesterLearnTime,jdbcType=INTEGER},
      week_learn_time = #{record.weekLearnTime,jdbcType=INTEGER},
      course_teacher = #{record.courseTeacher,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      system_status = #{record.systemStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlan">
    update course_plan
    <set>
      <if test="schoolYearId != null">
        school_year_id = #{schoolYearId,jdbcType=BIGINT},
      </if>
      <if test="schoolYearName != null">
        school_year_name = #{schoolYearName,jdbcType=VARCHAR},
      </if>
      <if test="semesterId != null">
        semester_id = #{semesterId,jdbcType=BIGINT},
      </if>
      <if test="semesterName != null">
        semester_name = #{semesterName,jdbcType=VARCHAR},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeName != null">
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseDiscipline != null">
        course_discipline = #{courseDiscipline,jdbcType=VARCHAR},
      </if>
      <if test="disciplineName != null">
        discipline_name = #{disciplineName,jdbcType=VARCHAR},
      </if>
      <if test="semesterLearnTime != null">
        semester_learn_time = #{semesterLearnTime,jdbcType=INTEGER},
      </if>
      <if test="weekLearnTime != null">
        week_learn_time = #{weekLearnTime,jdbcType=INTEGER},
      </if>
      <if test="courseTeacher != null">
        course_teacher = #{courseTeacher,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="systemStatus != null">
        system_status = #{systemStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinayouthedu.zqzc.entity.paike.CoursePlan">
    update course_plan
    set school_year_id = #{schoolYearId,jdbcType=BIGINT},
      school_year_name = #{schoolYearName,jdbcType=VARCHAR},
      semester_id = #{semesterId,jdbcType=BIGINT},
      semester_name = #{semesterName,jdbcType=VARCHAR},
      grade_id = #{gradeId,jdbcType=BIGINT},
      grade_name = #{gradeName,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_discipline = #{courseDiscipline,jdbcType=VARCHAR},
      discipline_name = #{disciplineName,jdbcType=VARCHAR},
      semester_learn_time = #{semesterLearnTime,jdbcType=INTEGER},
      week_learn_time = #{weekLearnTime,jdbcType=INTEGER},
      course_teacher = #{courseTeacher,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      system_status = #{systemStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>




  <select id="selectGradeBySchoolYearIdAndSemesterId" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from course_plan where school_year_id = #{map.yearId,jdbcType=BIGINT} and semester_id = #{map.semesterId,jdbcType=BIGINT}
    group by grade_id order by grade_id
  </select>
  <select id="getCoursePlanList" parameterType="map" resultMap="BaseResultMap">
    <!--     select cp.id, cp.school_year_id, sy.school_year_name, cp.semester_id,s.semester_name,cp.grade_id,cp.course_id, -->
    <!--     c.course_discipline,cp.semester_learn_time,cp.week_learn_time,cp.create_time,cp.update_time,cp.system_status, -->
    <!--     g.grade_name,c.course_name,c.discipline_name from course_plan cp join grade g on g.id = cp.grade_id join course c  -->
    <!--     on c.id = cp.course_id join school_year sy on sy.id = cp.school_year_id join semester s on s.id = cp.semester_id -->
    <!--     where cp.school_year_id = #{map.yearId,jdbcType=BIGINT} and cp.semester_id = #{map.semesterId,jdbcType=BIGINT} -->
    <!--     <if test="map.gradeId != null" > -->
    <!--       and cp.grade_id = #{map.gradeId,jdbcType=BIGINT} -->
    <!--     </if> -->
    select <include refid="Base_Column_List" /> from course_plan cp
    where cp.school_year_id = #{map.yearId,jdbcType=BIGINT} and cp.semester_id = #{map.semesterId,jdbcType=BIGINT}
    <if test="map.gradeId != null" >
      and cp.grade_id = #{map.gradeId,jdbcType=BIGINT}
    </if>
  </select>

  <insert id="createCoursePlan" parameterType="java.util.List" useGeneratedKeys="true">
    <if test="list != null">
      insert into course_plan (school_year_id, school_year_name,
      semester_id, semester_name, grade_id,
      grade_name, course_id, course_name,
      course_discipline, discipline_name, semester_learn_time,
      week_learn_time,course_teacher)
      values
      <foreach collection="list" item="item" index="index" separator=",">
        (#{item.schoolYearId,jdbcType=BIGINT}, #{item.schoolYearName,jdbcType=VARCHAR},
        #{item.semesterId,jdbcType=BIGINT}, #{item.semesterName,jdbcType=VARCHAR}, #{item.gradeId,jdbcType=BIGINT},
        #{item.gradeName,jdbcType=VARCHAR}, #{item.courseId,jdbcType=BIGINT}, #{item.courseName,jdbcType=VARCHAR},
        #{item.courseDiscipline,jdbcType=VARCHAR}, #{item.disciplineName,jdbcType=VARCHAR}, #{item.semesterLearnTime,jdbcType=INTEGER},
        #{item.weekLearnTime,jdbcType=INTEGER},#{courseTeacher,jdbcType=VARCHAR},)
      </foreach>
    </if>
  </insert>


</mapper>