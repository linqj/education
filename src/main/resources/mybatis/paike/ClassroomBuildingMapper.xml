<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinayouthedu.zqzc.mapper.paike.ClassroomBuildingMapper">
  <resultMap id="BaseResultMap" type="com.chinayouthedu.zqzc.entity.paike.ClassroomBuilding">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="building_name" jdbcType="VARCHAR" property="buildingName" />
    <result column="building_number" jdbcType="VARCHAR" property="buildingNumber" />
    <result column="building_use" jdbcType="VARCHAR" property="buildingUse" />
    <result column="building_room_num" jdbcType="BIGINT" property="buildingRoomNum" />
    <result column="building_admin" jdbcType="VARCHAR" property="buildingAdmin" />
    <result column="sys_status" jdbcType="VARCHAR" property="sysStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, building_name, building_number, building_use, building_room_num, building_admin, 
    sys_status, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuildingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classroom_building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classroom_building
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from classroom_building
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuildingExample">
    delete from classroom_building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuilding" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into classroom_building (id, building_name, building_number, 
      building_use, building_room_num, building_admin, 
      sys_status, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{buildingName,jdbcType=VARCHAR}, #{buildingNumber,jdbcType=VARCHAR}, 
      #{buildingUse,jdbcType=VARCHAR}, #{buildingRoomNum,jdbcType=BIGINT}, #{buildingAdmin,jdbcType=VARCHAR}, 
      #{sysStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuilding">
    insert into classroom_building
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="buildingName != null">
        building_name,
      </if>
      <if test="buildingNumber != null">
        building_number,
      </if>
      <if test="buildingUse != null">
        building_use,
      </if>
      <if test="buildingRoomNum != null">
        building_room_num,
      </if>
      <if test="buildingAdmin != null">
        building_admin,
      </if>
      <if test="sysStatus != null">
        sys_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="buildingName != null">
        #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingNumber != null">
        #{buildingNumber,jdbcType=VARCHAR},
      </if>
      <if test="buildingUse != null">
        #{buildingUse,jdbcType=VARCHAR},
      </if>
      <if test="buildingRoomNum != null">
        #{buildingRoomNum,jdbcType=BIGINT},
      </if>
      <if test="buildingAdmin != null">
        #{buildingAdmin,jdbcType=VARCHAR},
      </if>
      <if test="sysStatus != null">
        #{sysStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuildingExample" resultType="java.lang.Long">
    select count(*) from classroom_building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classroom_building
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.buildingName != null">
        building_name = #{record.buildingName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingNumber != null">
        building_number = #{record.buildingNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingUse != null">
        building_use = #{record.buildingUse,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingRoomNum != null">
        building_room_num = #{record.buildingRoomNum,jdbcType=BIGINT},
      </if>
      <if test="record.buildingAdmin != null">
        building_admin = #{record.buildingAdmin,jdbcType=VARCHAR},
      </if>
      <if test="record.sysStatus != null">
        sys_status = #{record.sysStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classroom_building
    set id = #{record.id,jdbcType=BIGINT},
      building_name = #{record.buildingName,jdbcType=VARCHAR},
      building_number = #{record.buildingNumber,jdbcType=VARCHAR},
      building_use = #{record.buildingUse,jdbcType=VARCHAR},
      building_room_num = #{record.buildingRoomNum,jdbcType=BIGINT},
      building_admin = #{record.buildingAdmin,jdbcType=VARCHAR},
      sys_status = #{record.sysStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuilding">
    update classroom_building
    <set>
      <if test="buildingName != null">
        building_name = #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingNumber != null">
        building_number = #{buildingNumber,jdbcType=VARCHAR},
      </if>
      <if test="buildingUse != null">
        building_use = #{buildingUse,jdbcType=VARCHAR},
      </if>
      <if test="buildingRoomNum != null">
        building_room_num = #{buildingRoomNum,jdbcType=BIGINT},
      </if>
      <if test="buildingAdmin != null">
        building_admin = #{buildingAdmin,jdbcType=VARCHAR},
      </if>
      <if test="sysStatus != null">
        sys_status = #{sysStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinayouthedu.zqzc.entity.paike.ClassroomBuilding">
    update classroom_building
    set building_name = #{buildingName,jdbcType=VARCHAR},
      building_number = #{buildingNumber,jdbcType=VARCHAR},
      building_use = #{buildingUse,jdbcType=VARCHAR},
      building_room_num = #{buildingRoomNum,jdbcType=BIGINT},
      building_admin = #{buildingAdmin,jdbcType=VARCHAR},
      sys_status = #{sysStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>