<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinayouthedu.zqzc.mapper.paike.CourseMapper">
  <resultMap id="BaseResultMap" type="com.chinayouthedu.zqzc.entity.paike.Course">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="grade_id" jdbcType="BIGINT" property="gradeId" />
    <result column="grade_name" jdbcType="VARCHAR" property="gradeName" />
    <result column="grade_code" jdbcType="VARCHAR" property="gradeCode" />
    <result column="course_discipline" jdbcType="VARCHAR" property="courseDiscipline" />
    <result column="discipline_name" jdbcType="VARCHAR" property="disciplineName" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_number" jdbcType="VARCHAR" property="courseNumber" />
    <result column="course_type" jdbcType="VARCHAR" property="courseType" />
    <result column="course_length" jdbcType="INTEGER" property="courseLength" />
    <result column="course_plan_length" jdbcType="INTEGER" property="coursePlanLength" />
    <result column="course_level" jdbcType="INTEGER" property="courseLevel" />
    <result column="course_type_fixed" jdbcType="BIT" property="courseTypeFixed" />
    <result column="course_status" jdbcType="VARCHAR" property="courseStatus" />
    <result column="sys_status" jdbcType="VARCHAR" property="sysStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="effective" jdbcType="BIT" property="effective" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, grade_id, grade_name, grade_code, course_discipline, discipline_name, course_name, 
    course_number, course_type, course_length, course_plan_length, course_level, course_type_fixed, 
    course_status, sys_status, create_time, update_time, effective
  </sql>
  <select id="selectByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectExistDiscipline" resultType="com.chinayouthedu.zqzc.entity.paike.Dictionary">
    select d.* from course c join dictionary d on c.course_discipline = d.code group by c.course_discipline
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chinayouthedu.zqzc.entity.paike.Course">
    insert into course (id, grade_id, grade_name, 
      grade_code, course_discipline, discipline_name, 
      course_name, course_number, course_type, 
      course_length, course_plan_length, course_level, 
      course_type_fixed, course_status, sys_status, 
      create_time, update_time, effective
      )
    values (#{id,jdbcType=BIGINT}, #{gradeId,jdbcType=BIGINT}, #{gradeName,jdbcType=VARCHAR}, 
      #{gradeCode,jdbcType=VARCHAR}, #{courseDiscipline,jdbcType=VARCHAR}, #{disciplineName,jdbcType=VARCHAR}, 
      #{courseName,jdbcType=VARCHAR}, #{courseNumber,jdbcType=VARCHAR}, #{courseType,jdbcType=VARCHAR}, 
      #{courseLength,jdbcType=INTEGER}, #{coursePlanLength,jdbcType=INTEGER}, #{courseLevel,jdbcType=INTEGER}, 
      #{courseTypeFixed,jdbcType=BIT}, #{courseStatus,jdbcType=VARCHAR}, #{sysStatus,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{effective,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chinayouthedu.zqzc.entity.paike.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="gradeName != null">
        grade_name,
      </if>
      <if test="gradeCode != null">
        grade_code,
      </if>
      <if test="courseDiscipline != null">
        course_discipline,
      </if>
      <if test="disciplineName != null">
        discipline_name,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseNumber != null">
        course_number,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="courseLength != null">
        course_length,
      </if>
      <if test="coursePlanLength != null">
        course_plan_length,
      </if>
      <if test="courseLevel != null">
        course_level,
      </if>
      <if test="courseTypeFixed != null">
        course_type_fixed,
      </if>
      <if test="courseStatus != null">
        course_status,
      </if>
      <if test="sysStatus != null">
        sys_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="effective != null">
        effective,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeName != null">
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="gradeCode != null">
        #{gradeCode,jdbcType=VARCHAR},
      </if>
      <if test="courseDiscipline != null">
        #{courseDiscipline,jdbcType=VARCHAR},
      </if>
      <if test="disciplineName != null">
        #{disciplineName,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNumber != null">
        #{courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseLength != null">
        #{courseLength,jdbcType=INTEGER},
      </if>
      <if test="coursePlanLength != null">
        #{coursePlanLength,jdbcType=INTEGER},
      </if>
      <if test="courseLevel != null">
        #{courseLevel,jdbcType=INTEGER},
      </if>
      <if test="courseTypeFixed != null">
        #{courseTypeFixed,jdbcType=BIT},
      </if>
      <if test="courseStatus != null">
        #{courseStatus,jdbcType=VARCHAR},
      </if>
      <if test="sysStatus != null">
        #{sysStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effective != null">
        #{effective,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chinayouthedu.zqzc.entity.paike.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=BIGINT},
      </if>
      <if test="record.gradeName != null">
        grade_name = #{record.gradeName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeCode != null">
        grade_code = #{record.gradeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.courseDiscipline != null">
        course_discipline = #{record.courseDiscipline,jdbcType=VARCHAR},
      </if>
      <if test="record.disciplineName != null">
        discipline_name = #{record.disciplineName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseNumber != null">
        course_number = #{record.courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.courseLength != null">
        course_length = #{record.courseLength,jdbcType=INTEGER},
      </if>
      <if test="record.coursePlanLength != null">
        course_plan_length = #{record.coursePlanLength,jdbcType=INTEGER},
      </if>
      <if test="record.courseLevel != null">
        course_level = #{record.courseLevel,jdbcType=INTEGER},
      </if>
      <if test="record.courseTypeFixed != null">
        course_type_fixed = #{record.courseTypeFixed,jdbcType=BIT},
      </if>
      <if test="record.courseStatus != null">
        course_status = #{record.courseStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.sysStatus != null">
        sys_status = #{record.sysStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effective != null">
        effective = #{record.effective,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=BIGINT},
      grade_id = #{record.gradeId,jdbcType=BIGINT},
      grade_name = #{record.gradeName,jdbcType=VARCHAR},
      grade_code = #{record.gradeCode,jdbcType=VARCHAR},
      course_discipline = #{record.courseDiscipline,jdbcType=VARCHAR},
      discipline_name = #{record.disciplineName,jdbcType=VARCHAR},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_number = #{record.courseNumber,jdbcType=VARCHAR},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      course_length = #{record.courseLength,jdbcType=INTEGER},
      course_plan_length = #{record.coursePlanLength,jdbcType=INTEGER},
      course_level = #{record.courseLevel,jdbcType=INTEGER},
      course_type_fixed = #{record.courseTypeFixed,jdbcType=BIT},
      course_status = #{record.courseStatus,jdbcType=VARCHAR},
      sys_status = #{record.sysStatus,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      effective = #{record.effective,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinayouthedu.zqzc.entity.paike.Course">
    update course
    <set>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="gradeName != null">
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="gradeCode != null">
        grade_code = #{gradeCode,jdbcType=VARCHAR},
      </if>
      <if test="courseDiscipline != null">
        course_discipline = #{courseDiscipline,jdbcType=VARCHAR},
      </if>
      <if test="disciplineName != null">
        discipline_name = #{disciplineName,jdbcType=VARCHAR},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseNumber != null">
        course_number = #{courseNumber,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="courseLength != null">
        course_length = #{courseLength,jdbcType=INTEGER},
      </if>
      <if test="coursePlanLength != null">
        course_plan_length = #{coursePlanLength,jdbcType=INTEGER},
      </if>
      <if test="courseLevel != null">
        course_level = #{courseLevel,jdbcType=INTEGER},
      </if>
      <if test="courseTypeFixed != null">
        course_type_fixed = #{courseTypeFixed,jdbcType=BIT},
      </if>
      <if test="courseStatus != null">
        course_status = #{courseStatus,jdbcType=VARCHAR},
      </if>
      <if test="sysStatus != null">
        sys_status = #{sysStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="effective != null">
        effective = #{effective,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinayouthedu.zqzc.entity.paike.Course">
    update course
    set grade_id = #{gradeId,jdbcType=BIGINT},
      grade_name = #{gradeName,jdbcType=VARCHAR},
      grade_code = #{gradeCode,jdbcType=VARCHAR},
      course_discipline = #{courseDiscipline,jdbcType=VARCHAR},
      discipline_name = #{disciplineName,jdbcType=VARCHAR},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_number = #{courseNumber,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      course_length = #{courseLength,jdbcType=INTEGER},
      course_plan_length = #{coursePlanLength,jdbcType=INTEGER},
      course_level = #{courseLevel,jdbcType=INTEGER},
      course_type_fixed = #{courseTypeFixed,jdbcType=BIT},
      course_status = #{courseStatus,jdbcType=VARCHAR},
      sys_status = #{sysStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      effective = #{effective,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
